"use strict";

class DomElementsHandler {
  constructor(whats_up) {
    this.whats_up = whats_up;
  }

  // whole info

  open_whole_info_box(item, position) {
    let whole_box_html = `
      <div id="whole_info_box" class="whole-info">
        <div class="container">
          <div class="row">
            <div class="col-7 item-name">${item.name}</div>
            <div class="col-5">(D-link, DES 2108)??</div>
          </div>
          <div class="ip-address whole-box-editable" id="whole_box_ip_address">${
            item.ip_address
          }</div>
          <div class="whole-box-editable" id="whole_box_address">${
            item.address ? item.address : ""
          }</div>
          <hr>
          <div class="guide-label">
            Описание:
          </div>
          <div class="description whole-box-editable" id="whole_box_description">${
            item.description ? item.description : ""
          }</div>
          <hr>
          <div class="guide-label">Контакты:</div>
          <div class="whole-box-editable" id="whole_box_contacts">${
            item.contacts ? item.contacts : ""
          }</div>
          <hr>
          <div class="guide-label">Порты:</div>
          <div>
            <div class="row">
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-6">
                <input></input>
              </div>
            </div>
          </div>
          <div>
            <div class="row">
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-6">
                <input></input>
              </div>
            </div>
          </div>
          <div>
            <div class="row">
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-6">
                <input></input>
              </div>
            </div>
          </div>
          <div>
            <div class="row">
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-6">
                <input></input>
              </div>
            </div>
          </div>
          <div>
            <div class="row">
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-6">
                <input></input>
              </div>
            </div>
          </div>
          <div>
            <div class="row">
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-6">
                <input></input>
              </div>
            </div>
          </div>
          <div>
            <div class="row">
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-6">
                <input></input>
              </div>
            </div>
          </div>
          <div>
            <div class="row">
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-6">
                <input></input>
              </div>
            </div>
          </div>
          <div>
            <div class="row">
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-3">
                <input></input>
              </div>
              <div class="col-6">
                <input></input>
              </div>
            </div>
          </div>
          <div class="device-buttons-wrapper">
            <div id="delete_device_button">
              <img src="<%= asset_path('delete_button.svg') %>">
            </div>
            <div id="add_device_button">
              <img src="<%= asset_path('plus_button.svg') %>">
            </div>
            <div id="edit_device_button">
              <img src="<%= asset_path('edit_button.svg') %>">
            </div>
            <div id="save_changes_button" class="save-changes-button btn btn-success">Сохранить</div>
          </div>
        </div>
      </div>
    `;

    $("#canvas").after(whole_box_html);
    $("#whole_info_box").css({ top: position.top, left: position.left });

    this._set_whole_info_box_events(item);
  }

  _set_whole_info_box_events(item) {
    $("#edit_device_button").click(() => {
      let editables = $(".whole-box-editable");
      // set editing on fields
      editables.addClass("whole-box-editing");
      editables.attr("contenteditable", "true");

      $("#edit_device_button").css("display", "none");
      $("#save_changes_button").css("display", "block");
    });

    $("#save_changes_button").click(() => {
      this.whats_up.api_communicator.change_device_info(
        item.id,
        {
          description: $("#whole_box_description").html(),
          address: $("#whole_box_address").html(),
          contacts: $("#whole_box_contacts").html(),
          ip_address: $("#whole_box_ip_address").html()
        },
        () => {
          let editables = $(".whole-box-editable");
          // remove editing from fields
          editables.removeClass("whole-box-editing");
          editables.attr("contenteditable", "false");

          $("#edit_device_button").css("display", "block");
          $("#save_changes_button").css("display", "none");

          // change ip in info box
          $("#info_box_ip_address").html($("#whole_box_ip_address").html());
        }
      );
    });
  }

  //

  // info box

  open_item_box(item, item_data) {
    let info_box_html = `
      <div id='info_box' class='info-box container'>
        <div class='item-name'>${item_data.name}</div>
        <hr class='info-box-delimiter'>
        <div class='info-label'>Hostname:</div>
        <div class='info-text'>${item_data.host_name}</div><br>
        <div class='info-label'>Address:</div>
        <div class='info-text' id="info_box_ip_address">${
          item_data.ip_address
        }</div><br>
        <div class='info-label'>Up since:</div>
        <div class='info-text'>08/28/18 20:25:29</div><br>
        <div class='info-label'>Responded:</div>
        <div class='info-text'>98.13%</div><br>
        <div class='info-label'>Status:</div>
        <div class='info-text green-status'>Active and responding</div><br>
        <hr class='info-box-delimiter'>
        <div class='info-label'>20180828 202618 UP</div>
        <div class='info-label'>20180828 202618 DOWN</div>
        <div class='info-label'>20180828 202618 UP</div>
        <div class='info-label'>20180828 202618 DOWN</div>
        <div class='info-label'>20180828 202618 UP</div>
        <div id="info_box_open_button" class='open-button'>
          <div class='open-button-text'>Перейти</div>
        </div>
        <div id="info_box_unlink_button" class='unlink-button'>
          <img src="<%= asset_path('unlink_button.svg') %>">
        </div>
        <div id="info_box_copy_button" class='copy-button'>
          <img src="<%= asset_path('copy_button.svg') %>">
        </div>
        <div id="info_box_delete_button" class='delete-button'>
          <img src="<%= asset_path('delete_button.svg') %>">
        </div>
      </div>
    `;
    $("#canvas").after(info_box_html);
    $("#info_box").css({
      top: item.position.y,
      left: item.position.x + 45
    });

    this._set_item_box_events(item_data);
  }

  close_item_box() {
    $("#info_box").remove();
    $("#whole_info_box").remove();
  }

  _set_item_box_events(item_data) {
    $("#info_box_open_button").click(() => {
      let top = $("#info_box").css("top");
      let left = $("#info_box").css("left");
      left = Number(left.slice(0, left.length - 2)) + 320 + "px";
      this.open_whole_info_box(item_data, { top, left });
    });
    $("#info_box_delete_button").click(() => {
      this.whats_up.api_communicator.delete_device_by_item_id(
        item_data.id,
        () => {
          location.reload();
        }
      );
    });
    $("#info_box_unlink_button").click(() => {
      this.whats_up.api_communicator.delete_connections_by_item_id(
        item_data.id,
        () => {
          location.reload();
        }
      );
    });
  }

  //

  // action box

  _action_box_content(content_type, items) {
    switch (content_type) {
      case "link": {
        return this._ruler_content(items);
      }
      case "unlink": {
        return this._ruler_unlink_content(items);
      }
      case "add_object": {
        return this._add_object_content();
      }
      case "add_object routers":
      case "add_object radio":
      case "add_object office": {
        return this._add_objects_items_content(content_type);
      }
    }
  }

  _action_box_title(content_type) {
    switch (content_type) {
      case "link": {
        return "Создание связности объектов";
      }
      case "unlink": {
        return "Удаление связности объектов";
      }
      case "add_object": {
        return "Добавление объектов";
      }
    }
  }

  _reset_action_box(content_type) {
    this._clear_action_box();
    this._fill_action_box(this._action_box_content(content_type));
    this._set_action_box_events(content_type);
  }

  _clear_action_box() {
    $("#action_box_content_wrapper").empty();
  }

  _fill_action_box(content) {
    $("#action_box_content_wrapper").html(content);
  }

  _set_action_box_events(content_type, items = null) {
    switch (content_type) {
      case "link": {
        $("#save_connection_button").click(() => {
          this.whats_up.api_communicator.create_connection(
            this.whats_up.map_name,
            items.first_item,
            items.second_item,
            () => {
              document.location.reload();
            }
          );
        });
        break;
      }
      case "unlink": {
        $("#unlink_connection_button").click(() => {
          this.whats_up.api_communicator.delete_connection(
            this.whats_up.map_name,
            items.first_item,
            items.second_item,
            () => {
              document.location.reload();
            }
          );
        });
        break;
      }
      case "add_object": {
        $(".add-item").click(event => {
          let text = event.currentTarget.children[1].firstChild.textContent;
          this._handle_object_type_selection(text);
        });
        break;
      }
      case "add_object radio": {
        $(".item").click(event => {
          let text = event.currentTarget.children[1].firstChild.textContent;
          this.whats_up.mouse_event_handler.switch_clickable_mode_to(
            "adding_object"
          );
          this.whats_up.mouse_event_handler.set_adding_object({
            placeable: { host_type_name: "Router" },
            placeable_type: "Device",
            name: "New Router",
            text_content: "New Router"
          });
          console.log(text);
        });
        break;
      }
      case "add_object office": {
        $(".item").click(event => {
          let text = event.currentTarget.children[1].firstChild.textContent;
          this.whats_up.mouse_event_handler.switch_clickable_mode_to(
            "adding_object"
          );
          console.log(text);
        });
        break;
      }
      case "add_object routers": {
        $(".item").click(event => {
          let text = event.currentTarget.children[1].firstChild.textContent;
          console.log(text);
          this.whats_up.mouse_event_handler.switch_clickable_mode_to(
            "adding_object"
          );
        });
        break;
      }
    }
  }

  open_action_box(content_type, items = null) {
    $("#action_box").remove();
    if (content_type == "link" || content_type == "unlink") {
      $("#ruler_img").prop("src", "<%= asset_path('ruler.svg') %>");
    }
    let action_box_html = `
      <div id='action_box' class='action-box'>
        <div class='title'>
          ${this._action_box_title(content_type)}
        </div>
        <div id='close_button' class='close-button'>
          <img src="<%= asset_path('close_button.svg') %>">
        </div>
        <br><br>
        <div id="action_box_content_wrapper" class="action-box-content-wrapper">
          ${this._action_box_content(content_type, items)}
        </div>
      </div>
    `;

    $("#canvas").after(action_box_html);
    $("#close_button").click(() => {
      $("#action_box").remove();
    });
    this._set_action_box_events(content_type, items);
  }

  //

  // adding item in action box

  _add_object_content() {
    "<%= asset_path('ruler.svg') %>";
    return `
      <div class="adding-wrapper">
        <div class="add-item">
          <img src="<%= asset_path('radio.svg') %>" class="object-type-img uncentered-img">
          <span class="uncentered-text">Радио<span>
        </div>
        <div class="add-item">
          <img src="<%= asset_path('hub.svg') %>" class="object-type-img">
          <span>Свичи</span>
        </div>
        <div class="add-item">
          <img src="<%= asset_path('L3.svg') %>" class="object-type-img">
          <span>L3-устройства</span>
        </div>
        <div class="add-item">
          <img src="<%= asset_path('router.svg') %>" class="object-type-img">
          <span>Роутеры</span>
        </div>
        <div class="add-item with-no-right-margin">
          <img src="<%= asset_path('cctv.svg') %>" class="object-type-img">
          <span>Камеры</span>
        </div>
        <div class="add-item">
          <img src="<%= asset_path('radio.svg') %>" class="object-type-img uncentered-img">
          <span>Оповещалки</span>
        </div>
        <div class="add-item">
          <img src="<%= asset_path('desktop.svg') %>" class="object-type-img">
          <span>Компьютеры</span>
        </div>
        <div class="add-item">
          <img src="<%= asset_path('network.svg') %>" class="object-type-img">
          <span>Конвертеры</span>
        </div>
        <div class="add-item">
          <img src="<%= asset_path('molecular.svg') %>" class="object-type-img">
          <span>Соединения</span>
        </div>
        <div class="add-item with-no-right-margin">
          <img src="<%= asset_path('frame.svg') %>" class="object-type-img">
          <span>Рамки</span>
        </div>
        <div class="add-item">
          <img src="<%= asset_path('figures.svg') %>" class="object-type-img">
          <span>Фигуры</span>
        </div>
        <div class="add-item">
          <img src="<%= asset_path('radio.svg') %>" class="object-type-img uncentered-img">
          <span>Надписи</span>
        </div>
        <div class="add-item">
          <img src="<%= asset_path('radio.svg') %>" class="object-type-img uncentered-img">
          <span>Офис</span>
        </div>
        <div class="add-item with-no-right-margin">
          <img src="<%= asset_path('cloud.svg') %>" class="object-type-img">
          <span>Зоны</span>
        </div>
      </div>
    `;
  }

  _add_objects_items_content(type) {
    let items = [];
    let breadcrumb;
    switch (type) {
      case "add_object radio": {
        breadcrumb = "Радио";
        items = [
          {
            label: "Infinet R200",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infinet R500",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infinet R2000",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infinet R3000",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infinet R5000-H02",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infinet R5000-H05-5.3",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infinet R5000-H05-2.4",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infinet R5000-H05-6.3",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infinet R5000-Ho7-2.4",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infinet R5000-H07-6.3",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infinet R5000-H07-5.3",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infinet R5000-H08",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infinet R5000-H11",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infilink XG-5",
            img_src: "<%= asset_path('rectangle.svg') %>"
          },
          {
            label: "Infilink XG-6",
            img_src: "<%= asset_path('rectangle.svg') %>"
          }
        ];
        break;
      }
      case "add_object office": {
        breadcrumb = "Офис";
        items = [
          { label: "Принтер", img_src: "<%= asset_path('printer.svg') %>" },
          { label: "Сканер", img_src: "<%= asset_path('scanner.svg') %>" },
          { label: "Факс", img_src: "<%= asset_path('fax.svg') %>" }
        ];
        break;
      }
      case "add_object routers": {
        breadcrumb = "Роутеры";
        items = [
          { label: "SNR-CPE-W4N", img_src: "<%= asset_path('modem.svg') %>" },
          { label: "Другой роутер", img_src: "<%= asset_path('router.svg') %>" }
        ];
        break;
      }
    }

    let html = "";
    for (let item of items) {
      html += `
        <div class="item">
          <img src=${item.img_src}>
          <span>${item.label}<span>
        </div>
      `;
    }
    return `
      <div class="breadcrumbs">
        <span id="all_objects_button" class="all-objects">Все объекты</span><span class="current-objects"> / ${breadcrumb}</span>
      </div>
      <div class="adding-wrapper">
        ${html}
      </div>
    `;
  }

  _handle_object_type_selection(text) {
    let prefix = "add_object";
    switch (text) {
      case "Радио": {
        this._reset_action_box(prefix + " radio");
        break;
      }
      case "Офис": {
        this._reset_action_box(prefix + " office");
        break;
      }
      case "Роутеры": {
        this._reset_action_box(prefix + " routers");
        break;
      }
    }
    $("#all_objects_button").click(() => {
      this._clear_action_box();
      this._fill_action_box(this._action_box_content("add_object"));
      this._set_action_box_events("add_object");
    });
  }

  //

  // ruler in action box

  _ruler_connection_types() {
    let connection_types = [
      "10BaseT",
      "10/100BaseTX",
      "10/100/100BaseTX",
      "Gigabit-Combo",
      "SFP",
      "GBIC",
      "SFP+",
      "XFP"
    ];
    let html = `
      <div class="connection-type">
        <lable>Радиоподключение</lable>
        <input type="radio" name="connection_type" checked>
      </div>
    `;
    for (let connection_type of connection_types) {
      html += `
      <div class="connection-type">
        <lable>${connection_type}</lable>
        <input type="radio" name="connection_type">
      </div>
      `;
    }
    return html;
  }

  _ruler_content(items) {
    return `
    <div class="ruler-wrapper">
      <div class="row">
        <div class="ruler-navigation">
          <div class="ruler-title">
            Тип связи
          </div>
          ${this._ruler_connection_types()}
        </div>
        <div class="ruler-main">
          <div class="items-row">
            <div class="first-item">
              <span class="item-img">
                ${get_icon(
                  items.first_item._icon_type
                    ? items.first_item._icon_type
                    : "Shape"
                )}
              </span>
              <label class="item-label">
                ${
                  items.first_item.text_content
                    ? items.first_item.text_content
                    : "Фигура"
                }
              </label>
            </div>
            <div class="second-item">
              <span class="item-img">
                ${get_icon(
                  items.second_item._icon_type
                    ? items.second_item._icon_type
                    : "Shape"
                )}
              </span>
              <label class="item-label">
                ${
                  items.second_item.text_content
                    ? items.second_item.text_content
                    : "Фигура"
                }
              </label>
            </div>
            <div class="connection-line"></div>
          </div>

          <div id="save_connection_button" class="confirm-button">
            <div class='text'>Сохранить</div>
          </div>
        </div>
      </div>
    </div>
    `;
  }

  _ruler_unlink_content(items) {
    return `
    <div class="ruler-wrapper">
      <div class="ruler-main">
        <div class="items-row">
          <div class="first-item">
            <span class="item-img">
              ${get_icon(
                items.first_item._icon_type
                  ? items.first_item._icon_type
                  : "Shape"
              )}
            </span>
            <label class="item-label">
              ${
                items.first_item.text_content
                  ? items.first_item.text_content
                  : "Фигура"
              }
            </label>
          </div>
          <div class="second-item">
            <span class="item-img">
              ${get_icon(
                items.second_item._icon_type
                  ? items.second_item._icon_type
                  : "Shape"
              )}
            </span>
            <label class="item-label">
              ${
                items.second_item.text_content
                  ? items.second_item.text_content
                  : "Фигура"
              }
            </label>
          </div>
          <div class="connection-line unlink-line"></div>
        </div>
        <div id="unlink_connection_button" class="confirm-button unlink-confirm-button">
          <div class='text'>Удалить связь</div>
        </div>
      </div>
    </div>
    `;
  }

  //
}
