"use strict";
let whats_up;

let set_events = () => {
  $("#add_button").click(() => {
    whats_up.dom_elements_handler.open_action_box("add_object");
  });

  $("#ruler_button").click(() => {
    if (whats_up.mouse_event_handler.get_clickable_mode() == "ruler") {
      whats_up.mouse_event_handler.switch_clickable_mode_to("main_usage");
      $("#ruler_img").prop("src", "<%= asset_path('ruler.svg') %>");
    } else {
      whats_up.mouse_event_handler.switch_to("clickable");
      whats_up.mouse_event_handler.switch_clickable_mode_to("ruler");
      $("#ruler_img").prop("src", "<%= asset_path('active_ruler.svg') %>");
    }
  });

  // switch mode

  $("#switch_mode_button").click(() => {
    whats_up.mouse_event_handler.toggle_mode();
  });

  //

  $("#delete_button").click(() => {
    if ($("body").css("cursor") == "crosshair") {
      whats_up.mouse_event_handler.switch_to("clickable");
      whats_up.mouse_event_handler.switch_clickable_mode_to("main_usage");
      $("body").css({ cursor: "auto" });
    } else {
      whats_up.mouse_event_handler.switch_to("clickable");
      whats_up.mouse_event_handler.switch_clickable_mode_to("deleting");
      $("body").css({ cursor: "crosshair" });
    }
  });

  // search

  let timeout;
  $("#search").keyup(() => {
    search();
  });

  $("#search").focus(() => {
    if ($("#search").val().length > 2) {
      search();
    }
  });

  let search = () => {
    let filter = $("#search").val();
    if (filter.length < 3) {
      return;
    }
    if (timeout) {
      clearTimeout(timeout);
    }

    timeout = setTimeout(() => {
      whats_up.api_communicator.find_items(filter, data => {
        if (data.search_str != $("#search").val()) {
          return;
        }
        $("#search_box").css("display", "block");
        let html = "";
        data.items.forEach(item => {
          item.name += ` (${item.placeable.ip_address.ip_address})`
          html += `
            <div data-item-id="${item.id}" data-map-name=${
            item.map.name
          } class="search-row">
              ${item.name.replace(
                new RegExp(data.search_str, "ig"),
                "<span>$&</span>"
              )}
              <svg xmlns="http://www.w3.org/2000/svg">
                <circle cx="5" cy="5" r="5" fill=${
                  item.placeable.ip_address.icmp_available ? "green" : "red"
                }/>
              </svg>
              <hr>
            </div>
          `;
        });
        $("#search_box").html(html);
        $(".search-row").click(event => {
          window.location.href = `${location.origin}/maps?map=${$(
            event.currentTarget
          ).data("map-name")}&focus_item_id=${$(event.currentTarget).data(
            "item-id"
          )}`;
        });
      });
    }, 600);
  };

  window.onclick = event => {
    if (!$(event.target).closest(".search-box,.search-row").length) {
      $("#search_box").css("display", "none");
    }
  };

  //

  // minimize button

  $("#minimize_navbar_btn").click(() => {
    $.post({
      url: location.origin + "/custom_settings/change",
      data: { setting: "minimize_navbar" }
    });
  });

  //
};

let init = () => {
  whats_up = new WhatsUp("canvas");
  let map_name = $("#map_name").html();
  whats_up.load_map(map_name, new URLSearchParams(window.location.search).get("focus_item_id"));

  set_events();
};

window.onload = () => init();
